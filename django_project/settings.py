"""
Django settings for django_project project.
Generated by 'django-admin startproject' using Django 2.2.12.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# ----- 1. IMPORTS -----
import os
import netifaces
from decouple import config

# ----- 2. CORE SETTINGS -----
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = config('SECRET_KEY')
DEBUG = True

# ----- 3. FUNCTION DEFINITIONS -----
def ip_addresses():
    """Find out the IP addresses at run time.
    Necessary because otherwise Gunicorn will reject the connections.
    """
    ip_list = []
    for interface in netifaces.interfaces():
        addrs = netifaces.ifaddresses(interface)
        for x in (netifaces.AF_INET, netifaces.AF_INET6):
            if x in addrs:
                ip_list.append(addrs[x][0]['addr'])
    return ip_list

# ----- 4. HOST SETTINGS -----
ALLOWED_HOSTS = ['127.0.0.1', 'localhost'] + ip_addresses() + ['lesionbank.org', 'www.lesionbank.org', 'example.com', 'www.example.com']
CSRF_TRUSTED_ORIGINS = ['https://lesionbank.org', 'http://lesionbank.org', 'http://127.0.0.1:8000', 'http://localhost:8000']

# ----- 5. APPLICATION DEFINITION -----
INSTALLED_APPS = [
    'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes',
    'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles',
    'crispy_forms', 'crispy_bootstrap5', 'lesion_bank', 'storages',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'django_project.urls'
WSGI_APPLICATION = 'django_project.wsgi.application'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages',
            'django.template.context_processors.media',
        ],
    },
}]

# ----- 6. DATABASE & STORAGE SETTINGS -----
DATABASES = {
   'default': {
       'ENGINE': config('DB_ENGINE'), 'NAME': config('DB_NAME'), 
       'USER': config('DB_USER'), 'PASSWORD': config('DB_PASSWORD'), 
       'HOST': config('DB_HOST'), 'PORT': config('DB_PORT'), 
       'OPTIONS': {'sslmode': config('DB_SSLMODE')},
   }
}
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]
CELERY_BROKER_URL, CELERY_RESULT_BACKEND = (
    (f"redis://{os.environ['REDIS_HOST']}:{os.environ['REDIS_PORT']}/0", f"redis://{os.environ['REDIS_HOST']}:{os.environ['REDIS_PORT']}/0") 
    if os.environ.get('REDIS_HOST') and os.environ.get('REDIS_PORT') 
    else ('redis://localhost:6379/0', 'redis://localhost:6379/0')
)
CELERY_ACCEPT_CONTENT, CELERY_TASK_SERIALIZER, CELERY_RESULT_SERIALIZER, CELERY_TIMEZONE = ['json'], 'json', 'json', 'UTC'

# ----- 7. STATIC & MEDIA FILES SETTINGS -----
CRISPY_ALLOWED_TEMPLATE_PACKS, CRISPY_TEMPLATE_PACK = "bootstrap5", "bootstrap5"
STATIC_URL, STATIC_ROOT = '/static/', os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'staticfiles'), os.path.join(BASE_DIR, 'lesion_bank/static/')]

USE_S3 = config('USE_S3', default=False, cast=bool)
if USE_S3:
    DEFAULT_FILE_STORAGE, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_STORAGE_BUCKET_NAME, AWS_S3_ENDPOINT_URL = (
        'django_project.custom_storage.CustomStorage', config('AWS_ACCESS_KEY_ID'), config('AWS_SECRET_ACCESS_KEY'),
        config('AWS_STORAGE_BUCKET_NAME'), config('AWS_S3_ENDPOINT_URL')
    )
    AWS_S3_REGION_NAME = config('AWS_S3_REGION_NAME', default='nyc3')
    AWS_S3_CUSTOM_DOMAIN = AWS_S3_ENDPOINT_URL.replace("https://", "") + '/' + AWS_STORAGE_BUCKET_NAME
    MEDIA_URL, MEDIA_ROOT = f'https://{AWS_S3_CUSTOM_DOMAIN}/', None
else:
    MEDIA_URL, MEDIA_ROOT = '/media/', os.path.join(BASE_DIR, 'media')

# ----- 8. AUTHENTICATION & REDIRECTS -----
LOGIN_REDIRECT_URL, LOGIN_URL, LOGOUT_REDIRECT_URL = '/', '/login/', '/'

# ----- 9. OTHER SETTINGS -----
PRIVATE_SYMPTOMS = ['None so far']
LANGUAGE_CODE, TIME_ZONE, USE_I18N, USE_L10N, USE_TZ = 'en-us', 'UTC', True, True, True
